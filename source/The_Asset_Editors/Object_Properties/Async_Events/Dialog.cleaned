<html>
 <head>
 </head>
 <body>
  <h1>
   Dialog
  </h1>
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Asset_Editors/Async_Dialog.png"/><br/>
  The Dialog asynchronous event is only triggered when it gets a
  <a>
   callback
  </a>
  from one of the
    special
  <a href="../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Dialog/Dialog.htm">
   asynchronous dialog functions
  </a>
  , like
  <a href="../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Dialog/get_login_async.htm">
   <span>
    get_login_async()
   </span>
  </a>
  (please
    see this function for an extended code example of how this event is used).
  
  
   These events are the ones that ask for some type of user input, which can be a name, login details, a number or a colour etc... As most devices do not like sitting in a loop waiting for a reply, they have to be asynchronous and
  <span>
   GameMaker
  </span>
  will
    continue to run in the background while these functions have a dialogue open and until they get the required user input which triggers this event. This means that if the dialog is open while a game is in progress, you should take steps to pause the
    game until the dialog callback has been recieved.
  
  
   Again, a
  <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">
   DS Map
  </a>
  is returned with the ID held in the special variable
  <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">
   <span>
    async_load
   </span>
  </a>
  .
    The values held in this map will depend on the function used, and you should consult the individual entries for each function in this manual for more details.
  <strong>
   <em>
    <span>
     NOTE
    </span>
   </em>
  </strong>
  <em>
   The async dialog functions are
   <span>
    for
    <strong>
     debugging and testing use only
    </strong>
    and should not be used in released games. For that purpose you should create a custom user interface to receive input from players so that you have complete control over how the dialogs look and behave.
   </span>
  </em>
 </body>
</html>