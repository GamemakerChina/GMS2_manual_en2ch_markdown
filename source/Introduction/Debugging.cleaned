<html>
 <head>
 </head>
 <body>
  <h1>
   Debugging
  </h1>
  When programming your game, whether using
  <span>
   GML Code
  </span>
  or
  <span>
   GML Visual
  </span>
  , it can be very easy to make mistakes - using the wrong variables, passing the wrong arguments, or using the wrong functions are just some of the most common errors we all make - and these mistakes are not always detected by the
  <a>
   syntax
  </a>
  checker that is included with the script/action editor. That means that these mistakes will only become apparent when you actually run or compile your game, and even then it can sometimes be difficult to know exactly what is going wrong. It can therefore be of vital importance to know how your game is performing on the chosen device, as well as see what instances are in the room, what global variables have been created and a whole host of other details. Checking these things is called "
  <strong>
   debugging your code
  </strong>
  ", and any errors or issues you may find are called "
  <strong>
   bugs
  </strong>
  ".
  
  
   Now, you can check a lot of these things yourself by adding in so-called "debug code" to your games to display on the screen the information you require, or you can have it that it shows messages when there is an error, but this is often a lot of work and if you aren't sure where the problem is in the first place then it can be a time consuming case of trial and error to track down your bug. For that,
  <span>
   GameMaker
  </span>
  has a special test mode called
  <strong>
   Debug Mode
  </strong>
  which will start the
  <strong>
   Debug Module
  </strong>
  , and there is also a comprehensive
  <strong>
   error reporting system
  </strong>
  which displays messages on
  <a>
   Compiling
  </a>
  to help you track down any problems with your game.
  
  
   The sections below cover the different ways that you can debug your game:
  <a href="#">
   <span>
    Error Reporting
   </span>
   <span>
    Error Reporting
   </span>
  </a>
  When an error occurs during the compiling and execution of a project this is reported with a message in the
  <a href="The_Output_Window.htm">
   Compile Errors Output Window
  </a>
  , much like the one shown below:
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Introduction/QS_Debug_CompileError.png"/><br/>
  Most compiler error messages follow the same outline, with a message stating the object that the error has occurred in, then the Event along with the line number, and then finally a short description of the error itself. This type of information being provided by the error reporting is very important as it detects and reports the syntax and language related bugs that are going to cause your finished game to crash, but it won't report more subtle bugs, nor does it give feedback on performance. For those types of things you should use Debug Mode (explained below).
   
   
    Apart from these compile errors, you can also get syntax errors. These will be detected as you add your GML Visual actions or code and are shown in the
  <a href="The_Output_Window.htm">
   Syntax Errors Output Window
  </a>
  , similar to the image shown below:
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Introduction/QS_Debug_SyntaxError.png"/><br/>
  As with the compiler errors, the syntax errors window will direct you to the object, the event and the specific lines that are giving the issue, and will often be shown with a brief explanation of what the error is.
  <a href="#">
   <span>
    Debug Mode
   </span>
   <span>
    Debug Mode
   </span>
  </a>
  If you need to check things more carefully, you can run the game in
  <strong>
   Debug Mode
  </strong>
  by clicking the debug run button
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Icons/Icon_Debug.png"/><br/>
  . When you do, the
  <strong>
   Debug Module
  </strong>
  will open along with your game. This module permits you to monitor how everything is working in your game, from the global performance, right down to the values of individual variables in individual instances. You can find out further information about the Debug Module and its possibilities and how to use it from the following page:
  <ul>
   <li>
    <a href="../IDE_Tools/The_Debugger.htm">
     The Debugger
    </a>
   </li>
  </ul>
  Note that when you use the Debug Module, you can also add
  <strong>
   Breakpoints
  </strong>
  to your code or GML Visual. A breakpoint is a point in the game loop where you want the debug module to pause and let you step through the actual game code a line at a time. You can add breakpoints using the key "F9", and they will be shown in the
  <a href="The_Output_Window.htm">
   Output Window
  </a>
  where you can enable/disable them as required.
  <a href="#">
   <span>
    Additional Tools
   </span>
   <span>
    Additional Tools
   </span>
  </a>
  As an additional tool for debugging compiled games, there are certain
  <strong>
   command line parameters
  </strong>
  that can be used when you run the final game package on Windows. For information on how this works please see
  <a href="../Settings/Command_Line_Parameters.htm">
   here
  </a>
  .
   
   
    You can also generate a
  <strong>
   debug overlay
  </strong>
  when you are test running your game which will show additional debug information about the performance of your game as it is being run, and you can also output
  <strong>
   debug messages
  </strong>
  to the compile console where you can supply your own text to help debug the behaviour of your games. For more information see the following pages:
  <span>
  </span>
  <ul>
   <li>
    <a href="../GameMaker_Language/GML_Reference/Debugging/show_debug_overlay.htm">
     <span>
      show_debug_overlay
     </span>
    </a>
   </li>
   <li>
    <a href="../GameMaker_Language/GML_Reference/Debugging/show_debug_message.htm">
     <span>
      show_debug_message
     </span>
    </a>
   </li>
   <li>
    <span>
     <a href="../GameMaker_Language/GML_Reference/Debugging/debug_event.htm">
      debug_event
     </a>
    </span>
   </li>
  </ul>
  There are also a set of preferences related to debugging and using the debug tools. You can find more information from the following page:
  <ul>
   <li>
    <a href="Debugging.htm">
     Debugging Preferences
    </a>
   </li>
  </ul>
 </body>
</html>