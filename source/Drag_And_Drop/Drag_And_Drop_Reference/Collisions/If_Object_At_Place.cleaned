<html>
 <head>
 </head>
 <body>
  <h1>
   <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/i_Collision_At.png"/><br/>
   If Object At Place
  </h1>
  This action is used to check and see if there is a collision with one or more instances of a given object with the current instance placed at a point in the room, based on the collision mask of the calling instance. The action will evaluate to
  <span>
   true
  </span>
  if a collision is detected, or
  <span>
   false
  </span>
  otherwise. You give the object to check for and the position to "place" the instance to perform the check - which can be an absolute position in the room or a position relative to the instance
    - and you can also check the
  <b>
   Not
  </b>
  flag to check if there is
  <i>
   not
  </i>
  a collision at the given position, in which case the action will then only evaluate as
  <span>
   true
  </span>
  if
  <i>
   no
  </i>
  collisions are found, otherwise it will evaluate as
  <span>
   false
  </span>
  .
  
  
   After giving the object and position, you can check/uncheck the option to
  <b>
   Return List
  </b>
  . Checking this means the action will create and populate a
  <a href="../Data_Structures/Data_Structure_Actions.htm">
   list
  </a>
  <span>
  </span>
  data structure with
  <i>
   all
  </i>
  instances in collision with the instance and set the
  <b>
   Target
  </b>
  variable to the DS list ID. When unchecked, it will only set the
  <b>
   Target
  </b>
  variable to a value less than 0 when no collision is detected, or the unique ID value of
  <i>
   one
  </i>
  of the instances in the collision (note that if multiple instances are in collision then you have no way of knowing which instance ID will be returned when not using a list).
  
  
   If you have selected to return a list - and the Target variable is
  <i>
   not
  </i>
  set to
  <b>
   Temp
  </b>
  - then you can also select the
  <b>
   Free Target
  </b>
  option. When set to
  <span>
   true
  </span>
  , then the list contained in the target variable will be destroyed and
    a new list created (and returned to the target variable) each time you call the action. In this way you can re-use the same variable without worrying about memory leaks, as, if you do
  <i>
   not
  </i>
  check
  <b>
   Free Target
  </b>
  option, you become responsible
    for destroying the list before using the variable again in the action. Note that
  <i>
   regardless
  </i>
  of whether this option is checked or not, if you have set the action to
  <b>
   Return List
  </b>
  , then the target variable will
  <i>
   always contain a list ID
  </i>
  ,
    and as such, this will need to be freed when the instance is destroyed or the room ends (you can use the
  <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm">
   <b>
    Clean Up
   </b>
  </a>
  event for this, for example, along with the
  <a href="../Data_Structures/Free_Data_Structure.htm">
   Free Data Structure
  </a>
  <span>
  </span>
  action).
    It is worth noting that you can set the
  <b>
   Free Target
  </b>
  option to use a pre-defined variable or an expression and so control when the list data structure is freed by setting the variable elsewhere (or having different outcomes for the expression)
    as long as it evaluates to
  <span>
   true
  </span>
  /
  <span>
   false
  </span>
  .
  
  
   Finally, you supply the
  <b>
   Target
  </b>
  variable that you want to hold the returned value or list ID. If you flag the Target variable to hold the returned value as being a
  <b>
   Temp
  </b>
  (local) variable, then the action will create this variable to hold
    the return value
  <i>
   only
  </i>
  until the end of the event, in this case the Free Target option does nothing and you will be responsible for destroying the DS list if that option has been checked. If no target variable is supplied and the
  <b>
   Return List
  </b>
  option is checked, no list will be created.
  <b>
   IMPORTANT!
  </b>
  Collisions will only register for those instances that have a valid collision mask, ie: they have a sprite assigned to the
  <span>
   sprite_index
  </span>
  , or a sprite assigned to the
  <span>
   mask_index
  </span>
  . If
  <b>
   either
  </b>
  of the instances in
    the collision have no collision mask then the collision will not be detected, regardless of what the instance is drawing at the time.
  
  
   Note that to add actions into an "
  <span>
   if
  </span>
  " block, they should be dropped to the
  <i>
   side
  </i>
  of the action, as shown in the image below:
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/If_Collision_At.png"/><br/>
  <h4>
   Action Syntax:
  </h4>
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/a_Collision_At.png"/><br/>
  <h4>
   Arguments:
  </h4>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      Object
     </td>
     <td>
      The object to check for instances of
     </td>
    </tr>
    <tr>
     <td>
      x
     </td>
     <td>
      The x position to check
     </td>
    </tr>
    <tr>
     <td>
      y
     </td>
     <td>
      The y position to check
     </td>
    </tr>
    <tr>
     <td>
      Free Target
     </td>
     <td>
      Can be set to a variable or expression, or set to
      <span>
       true
      </span>
      /
      <span>
       false
      </span>
      to control freeing of the list memory when re-using a list variable
     </td>
    </tr>
    <tr>
     <td>
      Target
     </td>
     <td>
      The variable to target for the return value of the action
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Example:
  </h4>
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Collisions/e_Collision_At.png"/><br/>
  The above action block code checks for a collision with any instances of the object "
  <span>
   obj_Wall
  </span>
  " to the left and to the right and if one is found it reverses the horizontal direction of the calling instance.
 </body>
</html>