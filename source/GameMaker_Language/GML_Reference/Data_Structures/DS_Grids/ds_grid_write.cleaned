<html>
 <head>
 </head>
 <body>
  <h1>
   ds_grid_write
  </h1>
  This function can be used to convert the given ds_grid into a string, which can then be stored in an external file (for example). You can read the returned string from this function back into a ds_grid using the function
  <a href="ds_grid_read.htm">
   <span>
    ds_grid_read()
   </span>
  </a>
  .
  <b>
   <span>
    NOTE
   </span>
  </b>
  The returned string is not a human readable string, but rather a dump of the contents of the data-structure.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">ds_grid_write(index);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      index
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Grids/ds_grid_create.htm">
        DS Grid ID
       </a>
      </span>
     </td>
     <td>
      The index of the grid to write.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 String
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">ini_open("Save.ini"); ini_write_string("Save", "0", ds_grid_write(mygrid)); ini_close()
</code></pre>
  The above code will open an ini file (creating it if it doesn't already exist) and then write the given ds_grid as a string to that file.
 </body>
</html>