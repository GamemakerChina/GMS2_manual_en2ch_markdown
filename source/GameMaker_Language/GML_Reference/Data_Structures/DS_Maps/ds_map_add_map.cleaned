<html>
 <head>
 </head>
 <body>
  <h1>
   ds_map_add_map
  </h1>
  With this function you can assign a (previously created) DS map to a key within the given DS map . This function is designed for creating JSON compatible maps which you would then encode using
  <a href="../../File_Handling/Encoding_And_Hashing/json_encode.htm">
   <span>
    json_encode()
   </span>
  </a>
  and should only be used in conjunction with that functionality. If a DS map has another map added in this way, then destroying the parent map will also destroy the contained maps and free their memory, and calling
  <a href="ds_map_clear.htm">
   <span>
    ds_map_clear()
   </span>
  </a>
  on the parent map will also destroy and clean up any flagged maps.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">ds_map_add_map(id, key, value)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      id
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/ds_map_create.htm">
        DS Map ID
       </a>
      </span>
     </td>
     <td>
      The id of the map to use.
     </td>
    </tr>
    <tr>
     <td>
      key
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The key for the added map.
     </td>
    </tr>
    <tr>
     <td>
      value
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/ds_map_create.htm">
        DS Map ID
       </a>
      </span>
     </td>
     <td>
      The id of the map to add.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var j_map = ds_map_create();
var j_list = ds_list_create();
var sub_map = ds_map_create();
ds_map_add_list(sub_map, "list", j_list);
ds_map_add(sub_map, "array", j_array);
ds_map_add_map(j_map, "map", sub_map);
var j = json_encode(j_map);
ds_map_destroy(j_map);
</code></pre>
  The above code will create two DS maps, and then populate one with a list and an array before adding it into the second, which is then encoded into a JSON string. The map is then destroyed to remove it, and any other maps or lists that it contains, from memory.
 </body>
</html>