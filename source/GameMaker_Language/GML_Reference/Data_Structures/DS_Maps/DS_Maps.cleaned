<html>
 <head>
 </head>
 <body>
  <h1>
   DS Maps
  </h1>
  The DS map data structure is an exceptionally useful one as it lets you store
  <b>
   key
  </b>
  and
  <b>
   value
  </b>
  pairs. For example, a character in your game can have a quantity of different items (
  <i>
   keys
  </i>
  ) and for each individual item he can have a number of them (
  <i>
   values
  </i>
  ), like in an RPG where you can have 10 health potions, 5 mana potions and 100 gold. Maps maintain such pairs all together in the one place and you can add pairs to the map and search for the value corresponding to certain keys as well using some simple functions. There are a couple of things you should know about maps before you use them, however! Maps are
  <i>
   not
  </i>
  sorted in any (recognisable) way, meaning that to find a certain key you may have to iterate through the whole thing (which is
  <b>
   very
  </b>
  slow). There is also no way to hold two keys that are the same, nor can you assign one key two values.
  <strong>
   NOTE
  </strong>
  : It is recommended to use
  <a href="../../../GML_Overview/Structs.htm">
   structs
  </a>
  over DS maps as they have similar features, are easier to use and are garbage collected automatically.
  <b>
   <span>
    NOTE
   </span>
  </b>
  As with all dynamic resources, data structures take up memory and so should
  <b>
   always
  </b>
  be destroyed when no longer needed to prevent memory leaks which will slow down and eventually crash your game.
  
  
   Apart from the specific functions listed below you can all use an
  <a>
   expression
  </a>
  (called an
  <i>
   accessor
  </i>
  ) to add or modify the contents of your DS map. This accessor looks similar to a 1D array with the following syntax:
  <pre><code class="language-gml">map_index[? key]
</code></pre>
  You can find more information, plus examples, from from the GML Overview page on
  <a href="../../../GML_Overview/Accessors.htm">
   Accessors
  </a>
  .
  
  
   The following functions exist that deal with DS maps:
  <ul>
   <li>
    <a href="ds_map_exists.htm">
     ds_map_exists
    </a>
   </li>
   <li>
    <a href="ds_map_create.htm">
     ds_map_create
    </a>
   </li>
   <li>
    <a href="ds_map_add.htm">
     ds_map_add
    </a>
   </li>
   <li>
    <a href="ds_map_clear.htm">
     ds_map_clear
    </a>
   </li>
   <li>
    <a href="ds_map_copy.htm">
     ds_map_copy
    </a>
   </li>
   <li>
    <a href="ds_map_replace.htm">
     ds_map_replace
    </a>
   </li>
   <li>
    <a href="ds_map_delete.htm">
     ds_map_delete
    </a>
   </li>
   <li>
    <a href="ds_map_empty.htm">
     ds_map_empty
    </a>
   </li>
   <li>
    <a href="ds_map_size.htm">
     ds_map_size
    </a>
   </li>
   <li>
    <a href="ds_map_find_first.htm">
     ds_map_find_first
    </a>
   </li>
   <li>
    <a href="ds_map_find_last.htm">
     ds_map_find_last
    </a>
   </li>
   <li>
    <a href="ds_map_find_next.htm">
     ds_map_find_next
    </a>
   </li>
   <li>
    <a href="ds_map_find_previous.htm">
     ds_map_find_previous
    </a>
   </li>
   <li>
    <a href="ds_map_find_value.htm">
     ds_map_find_value
    </a>
   </li>
   <li>
    <a href="ds_map_keys_to_array.htm">
     ds_map_keys_to_array
    </a>
   </li>
   <li>
    <a href="ds_map_values_to_array.htm">
     ds_map_values_to_array
    </a>
   </li>
   <li>
    <a href="ds_map_set.htm">
     ds_map_set
    </a>
   </li>
   <li>
    <a href="ds_map_read.htm">
     ds_map_read
    </a>
   </li>
   <li>
    <a href="ds_map_write.htm">
     ds_map_write
    </a>
   </li>
   <li>
    <a href="ds_map_destroy.htm">
     ds_map_destroy
    </a>
   </li>
  </ul>
  There are four further functions available for saving and loading a DS map. These functions will obfuscate the map and store it in a secure location on the target platform using a file format that means that the final file is not able to be transfered between devices:
  <ul>
   <li>
    <a href="ds_map_secure_save.htm">
     ds_map_secure_save
    </a>
   </li>
   <li>
    <a href="ds_map_secure_save_buffer.htm">
     ds_map_secure_save_buffer
    </a>
   </li>
   <li>
    <a href="ds_map_secure_load.htm">
     ds_map_secure_load
    </a>
   </li>
   <li>
    <a href="ds_map_secure_load_buffer.htm">
     ds_map_secure_load_buffer
    </a>
   </li>
  </ul>
  One of the uses that DS maps have is when working with JSON, and so there are a few special functions that are specific to that:
  <ul>
   <li>
    <a href="ds_map_add_list.htm">
     ds_map_add_list
    </a>
   </li>
   <li>
    <a href="ds_map_add_map.htm">
     ds_map_add_map
    </a>
   </li>
   <li>
    <a href="ds_map_replace_list.htm">
     ds_map_replace_list
    </a>
   </li>
   <li>
    <a href="ds_map_replace_map.htm">
     ds_map_replace_map
    </a>
   </li>
   <li>
    <a href="ds_map_is_list.htm">
     ds_map_is_list
    </a>
   </li>
   <li>
    <a href="ds_map_is_map.htm">
     ds_map_is_map
    </a>
   </li>
  </ul>
  <b>
   <span>
    NOTE
   </span>
  </b>
  While these functions permit you to add lists and maps within a map, they are useless for anything other than JSON, and nested maps and lists will not be read correctly if written to disk or accessed in any other way.
 </body>
</html>