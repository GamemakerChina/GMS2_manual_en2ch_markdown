<html>
 <head>
 </head>
 <body>
  <h1>
   point_in_triangle
  </h1>
  When using this function, you define a triangular area and
  <span>
   GameMaker
  </span>
  will work out whether the given point falls within its bounds or not. If the point falls within the defined triangle the function will return
  <span>
   true
  </span>
  otherwise the function will return
  <span>
   false
  </span>
  .
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">point_in_triangle(px, py, x1, y1, x2, y2, x3, y3);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      px
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The x coordinate of the point to check.
     </td>
    </tr>
    <tr>
     <td>
      py
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The y coordinate of the point to check.
     </td>
    </tr>
    <tr>
     <td>
      x1
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The x coordinate of the first corner of the triangle to check.
     </td>
    </tr>
    <tr>
     <td>
      y1
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The y coordinate of the first corner of the triangle to check.
     </td>
    </tr>
    <tr>
     <td>
      x2
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The x coordinate of the second corner of the triangle to check.
     </td>
    </tr>
    <tr>
     <td>
      y2
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The y coordinate of the second corner of the triangle to check.
     </td>
    </tr>
    <tr>
     <td>
      x3
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The x coordinate of the third corner of the triangle to check.
     </td>
    </tr>
    <tr>
     <td>
      y3
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The y coordinate of the third corner of the triangle to check.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Boolean
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var inst = instance_nearest(x, y, obj_Player);
if instance_exists(inst)
{
    var x1 = x + lengthdir_x(100, image_angle - 45);
    var y1 = y + lengthdir_y(100, image_angle - 45);
    var x2 = x + lengthdir_x(100, image_angle + 45);
    var y2 = y + lengthdir_y(100, image_angle + 45);
    if point_in_triangle(inst.x, inst.y, x, y, x1, y1, x2, y2)
    {
        can_see = true;
    }
}
</code></pre>
  The above code uses the
  <span>
   point_in_triangle
  </span>
  function as a "cone of vision" to check for an instance of "obj_player", setting a variable to
  <span>
   true
  </span>
  should the objects x/y position fall within the defined triangle.
 </body>
</html>