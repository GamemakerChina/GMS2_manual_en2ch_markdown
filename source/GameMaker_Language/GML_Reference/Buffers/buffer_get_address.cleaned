<html>
 <head>
 </head>
 <body>
  <h1>
   buffer_get_address
  </h1>
  With this function you can get the a
  <i>
   pointer
  </i>
  to the raw,
  <i>
   aligned
  </i>
  buffer address. This is primarily for use with extensions as you can pass this value through to them, allowing them to access the buffer data. Note that there are a few things
    you cannot do with the buffer when accessing from an extension:
  <ul>
   <li>
    You cannot free the memory.
   </li>
   <li>
    You cannot resize the memory.
   </li>
   <li>
    You cannot not write past the buffer address plus the buffer size (you can use the
    <a href="buffer_get_size.htm">
     <span>
      buffer_get_size()
     </span>
    </a>
    function for this) or you will get an out of bounds error.
   </li>
  </ul>
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">buffer_get_address(buffer);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      buffer
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">
        Buffer ID
       </a>
      </span>
     </td>
     <td>
      The index of the buffer to use.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Pointer
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var b_address = buffer_get_address(buff_model); var b_end_address = b_address + buffer_get_size(buff_model);
</code></pre>
  The above code will get the memory address of the buffer indexed in the variable "buff_model" and then get the memory address for the end of the buffer using the
  <span>
   buffer_get_size()
  </span>
  function, storing both values in local variables for
    further use.
 </body>
</html>