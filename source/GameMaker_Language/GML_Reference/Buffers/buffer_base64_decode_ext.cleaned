<html>
 <head>
 </head>
 <body>
  <h1>
   buffer_base64_decode_ext
  </h1>
  With this function you can decode a base64 encoded string (created using the
  <a href="buffer_base64_encode.htm">
   <span>
    buffer_base64_encode()
   </span>
  </a>
  function) into a buffer. Unlike the function
  <a href="buffer_base64_decode.htm">
   <span>
    buffer_base64_decode()
   </span>
  </a>
  ,
    this will
  <i>
   not
  </i>
  create a buffer for you, but rather you should already have created the buffer (see
  <a href="buffer_create.htm">
   <span>
    buffer_create()
   </span>
  </a>
  ), the id of which you would then use with this function. The "offset" is the
    position within the buffer to decode the given string (in bytes).
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">buffer_base64_decode_ext(buffer, string, offset);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      buffer
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">
        Buffer ID
       </a>
      </span>
     </td>
     <td>
      The index of the buffer to decode the string into.
     </td>
    </tr>
    <tr>
     <td>
      string
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The base64 encoded string to decode.
     </td>
    </tr>
    <tr>
     <td>
      offset
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The data offset value.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">buff = buffer_create(16384, buffer_grow, 2); ini_open("Save.ini");
 var str = ini_read_string("Save", "Slot1", ""); buffer_base64_decode_ext(buff, str, 0); ini_close();
</code></pre>
  The above code will create a buffer and store the unique id for it in the variable "buff", then open an ini file and read a string from it into the local variable "str". This string is then decoded into the newly created buffer before
    closing the ini file again.
 </body>
</html>