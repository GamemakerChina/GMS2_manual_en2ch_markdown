<html>
 <head>
 </head>
 <body>
  <h1>
   buffer_async_group_option
  </h1>
  With this function you can set some platform specific options for the buffer group being saved/loaded. The options available are as follows:
  <ul>
   <li>
    "
    <b>
     subtitle
    </b>
    " or "
    <b>
     slottitle
    </b>
    " - The value for this option would be a string, which will be shown to the user when managing their save data in the OS. This is only important when saving data, not when loading again.
   </li>
   <li>
    "
    <b>
     showdialog
    </b>
    " - The value for this option is a boolean
    <span>
     true
    </span>
    or
    <span>
     false
    </span>
    . If set to
    <span>
     true
    </span>
    , when you save
    <i>
     or
    </i>
    load
    <span>
     GameMaker
    </span>
    will show the System UI, otherwise it will do a quicksave/quickload with no UI shown. You normally only need this if you're supporting multiple save slots to allow the user to pick a slot, but if you just support one slot per user, set this to
    <span>
     false
    </span>
    .
   </li>
   <li>
    "
    <b>
     savepadindex
    </b>
    " - For this option you would specify the
    <i>
     pad index
    </i>
    of the player who is saving
    <i>
     or
    </i>
    loading and the system will write data to and read data from this player's save folder.
   </li>
   <li>
    "
    <b>
     saveslotsize
    </b>
    " - This option requires that you specify the actual size in bytes you want to save (so you can do a
    <a href="buffer_seek.htm">
     <span>
      buffer_seek()
     </span>
    </a>
    and
    <a href="buffer_tell.htm">
     <span>
      buffer_tell()
     </span>
    </a>
    to get that, for example). Note that it is not obligatory to supply this value as all saves are pre-assigned a minimum space, which usually varies with the target platform.
   </li>
   <li>
    "
    <strong>
     ps_create_backup
    </strong>
    " -
    <em>
     (PlayStationÂ only)
    </em>
    - Setting this to
    <span>
     true
    </span>
    makes sure that the save data is backed up when the save directory is unmounted (i.e. when the
    <span>
     <a href="buffer_async_group_end.htm">
      buffer_async_group_end()
     </a>
    </span>
    function is called). See the console documentation for more information.
   </li>
  </ul>
  <b>
   IMPORTANT!
  </b>
  This function is currently only valid for the PSVita, PS4 and XBox One target modules. On all the other targets it will do nothing.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">buffer_async_group_option(option, value);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      option
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The option to set.
     </td>
    </tr>
    <tr>
     <td>
      value
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
      or
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The value to set (can be a real or string, depending on the option).
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">buffer_async_group_begin("save_folder_name");
buffer_async_group_option("showdialog", false);
buffer_async_group_option("slottitle", "Catch The Haggis Save");
buffer_async_group_option("subtitle", "All your haggis are saved here!");
save = buffer_save_async(buff, "Player_Save.sav", 0, 16384);
buffer_async_group_end();
</code></pre>
  The above code starts a buffer group then sets the group options before it sets 4 files to save asynchronously. The group definition is then ended (at which point saving will begin).
 </body>
</html>