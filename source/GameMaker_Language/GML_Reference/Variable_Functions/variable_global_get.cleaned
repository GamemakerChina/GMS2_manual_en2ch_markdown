<html>
 <head>
 </head>
 <body>
  <h1>
   variable_global_get
  </h1>
  With this function you can get the value from a given named global variable. You supply the name of the global variable to get the value of
  <i>
   as a string
  </i>
  (see example code below) and the function will return the value held by the global variable or
  <span>
   undefined
  </span>
  if the variable does not exist.
  <b>
  </b>
  <b>
   IMPORTANT!
  </b>
  If the global variable you are getting does not exist then the function will return the keyword
  <span>
   undefined
  </span>
  and you may get errors that will stop the game from functioning, so if in doubt use the function
  <a href="variable_global_exists.htm">
   <span>
    variable_global_exists
   </span>
  </a>
  first.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">variable_global_get(name);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      name
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The name of the global variable to get (as a string)
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable">
 Variable
</a>
(any data type) or
<a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 undefined
</a>
(if the named variable does not exist)
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">if variable_global_exists("enemy_num")
{
    show_debug_message("enemy_num = " + string(variable_global_get("enemy_num"));)
}
</code></pre>
  The above code will check to see if a global variable exists and if it does then it is output to the console.
 </body>
</html>