<html>
 <head>
 </head>
 <body>
  <h1>
   typeof
  </h1>
  This function returns the data type of any given variable as a string. The possible return values are listed in the table below:
  <table>
   <tbody>
    <tr>
     <th>
      String
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      number
     </td>
     <td>
      The variable holds a real (floating point) number - this can include
      <span>
       NaN
      </span>
      and
      <span>
       infinity
      </span>
     </td>
    </tr>
    <tr>
     <td>
      string
     </td>
     <td>
      The variable holds a string
     </td>
    </tr>
    <tr>
     <td>
      array
     </td>
     <td>
      The variable references an array
     </td>
    </tr>
    <tr>
     <td>
      bool
     </td>
     <td>
      The variable holds a boolean (
      <span>
       true
      </span>
      /
      <span>
       false
      </span>
      )
     </td>
    </tr>
    <tr>
     <td>
      int32
     </td>
     <td>
      The variable holds a 32bit integer
     </td>
    </tr>
    <tr>
     <td>
      int64
     </td>
     <td>
      The variable holds a 64 bit integer
     </td>
    </tr>
    <tr>
     <td>
      ptr
     </td>
     <td>
      The variable holds a pointer
     </td>
    </tr>
    <tr>
     <td>
      undefined
     </td>
     <td>
      The variable is undefined
     </td>
    </tr>
    <tr>
     <td>
      null
     </td>
     <td>
      The variable holds a null value (this should not be seen normally)
     </td>
    </tr>
    <tr>
     <td>
      vec3
     </td>
     <td>
      The variable holds a 3 value vector
     </td>
    </tr>
    <tr>
     <td>
      vec4
     </td>
     <td>
      The variable holds a 4 value vector
     </td>
    </tr>
    <tr>
     <td>
      method
     </td>
     <td>
      The variable holds a function reference
     </td>
    </tr>
    <tr>
     <td>
      struct
     </td>
     <td>
      The variable holds a struct reference
     </td>
    </tr>
    <tr>
     <td>
      unknown
     </td>
     <td>
      Value is unknown. This should
      <i>
       never
      </i>
      be seen and signifies that something has gone wrong at the most basic level like a memory overwrite
     </td>
    </tr>
   </tbody>
  </table>
  Please note that there are cases when this function may not return the correct value for a
  <strong>
   method
  </strong>
  . Consider the following two function definitions:
  <pre><code class="language-gml">a = function()
{
    // something
}

function b()
{
    // Something
}
</code></pre>
  Technically, these are both considered methods as they are binding a function to an instance scope variable, however calling
  <span>
   typeof()
  </span>
  on function
  <span>
   b
  </span>
  will return "number" and
  <em>
   not
  </em>
  "method", while calling it on
  <span>
   a
  </span>
  will return "method". This is due to the fact that methods created like the one for
  <span>
   b
  </span>
  are assigned script indices (which are integer values), since this is the way that the compiler recognises script functions, even if the function was not defined in a script.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">typeof(variable);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      variable
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable">
        Variable
       </a>
      </span>
     </td>
     <td>
      The variable to get the data type of.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 String
</a>
(see table above)
</code></pre>
  <h4>
   <b>
    Example:
   </b>
  </h4>
  <pre><code class="language-gml">var _str = typeof(global.ExtensionInput);
show_debug_message(" global.ExtensionInput is a " + _str);
</code></pre>
  The above code gets the data type held by the given global variable and returns the string to a local variable which is then used to output a message to the console.
 </body>
</html>