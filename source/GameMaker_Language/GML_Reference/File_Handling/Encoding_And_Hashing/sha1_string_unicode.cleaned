<html>
 <head>
 </head>
 <body>
  <h1>
   sha1_string_unicode
  </h1>
  In cryptography, SHA-1 is a cryptographic hash function designed by the United States
  <i>
   National Security Agency
  </i>
  and is employed in several widely used applications and protocols like the popular
  <b>
   Git
  </b>
  where it is used to check for file changes.
    This function will take an input unicode string and returns a 160 bit message digest in ASCII format, for example:
  <pre><code class="language-gml">sha1 input string = "The quick brown fox jumps over the lazy dog" sha1 output hash = "2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12"
</code></pre>
  In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example).
  <b>
   NOTE
  </b>
  : There are two formats for the sha1 encoding, UTF-8 and unicode. Both are provided to facilitate communication with different server setups, but the most common to use is unicode.
  <strong>
   NOTE
  </strong>
  : SHA-1 is not completely secure and can be broken. See
  <a href="https://en.wikipedia.org/wiki/SHA-1">
   this page
  </a>
  for more info.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">sha1_string_unicode(string)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      string
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The string to hash.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 String
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var hash, str; str = base64_encode(game_data); hash = sha1_string_unicode(str); http_get("http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?hash=" + hash); http_get("http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?data="
+ str);
</code></pre>
  The above code will base64 encode a string and then generate a sha1 hash. Finally, both the hash and the encoded string are sent to a server.
 </body>
</html>