<html>
 <head>
 </head>
 <body>
  <h1>
   gif_save_buffer
  </h1>
  With this function you can save out a GIF animation. You supply the GIF index (as returned by the function
  <a href="gif_open.htm">
   <span>
    gif_open()
   </span>
  </a>
  ) and the function will return a 1 byte-aligned grow buffer with the GIF data. Note that the final GIF data will have been palletized using the Universal 884 Palette (see
  <a href="https://en.wikipedia.org/wiki/List_of_software_palettes#8-8-4_levels_RGB">
   here
  </a>
  for more information).
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">gif_save_buffer(gif_index);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      gif_index
     </td>
     <td>
      <span>
       <a href="../../../../GameMaker_Language/GML_Reference/Cameras_And_Display/gif_open.htm">
        GIF ID
       </a>
      </span>
     </td>
     <td>
      The ID of gif to save
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm">
 Buffer ID
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">if save_gif == true
{
    if count == 0
    {
        gif_image = gif_open(room_width, room_height);
    }
    else if count &amp;amp;lt; 30
    {
        gif_add_surface(gif_image, application_surface, 6/100);
    }
    else
    {
        global.capture_buff = gif_save_buffer(gif_image);
        count = 0;
        save_gif = false;
    }
    count++;
}
</code></pre>
  The above code will create a GIF image file with 30 frames taken from the application surface and then save it to a buffer.
 </body>
</html>