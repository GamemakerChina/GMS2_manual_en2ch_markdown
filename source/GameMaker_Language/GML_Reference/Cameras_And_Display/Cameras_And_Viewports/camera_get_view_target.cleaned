<html>
 <head>
 </head>
 <body>
  <h1>
   camera_get_view_target
  </h1>
  This function can be used to retrieve the follow target of the given camera. The return value can be an object index, an instance ID or -1 if no follow target has been set.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">camera_get_view_target(camera_id)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      camera_id
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Cameras_And_Display/Cameras_And_Viewports/camera_create.htm">
        Camera ID
       </a>
      </span>
     </td>
     <td>
      The unique camera ID value returned when you created the camera
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../The_Asset_Editors/Objects.htm">
 Object Asset
</a>
,
<a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm">
 Instance ID
</a>
or -1
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var target = camera_get_view_target(view_camera[0]);
if target != obj_Player
{
    camera_set_view_target(view_camera[0], obj_Player);
}
</code></pre>
  The above code retrieves the follow target of the camera assigned to view port[0] and then checks this to see if it matches the object index "obj_Player". If it does not then the view camera is set to follow an instance of that object.
 </body>
</html>