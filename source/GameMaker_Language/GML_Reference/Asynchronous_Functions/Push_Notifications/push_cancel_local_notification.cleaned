<html>
 <head>
 </head>
 <body>
  <h1>
   push_cancel_local_notification
  </h1>
  This function cancels the given push notification. You can get the ID for the notification to cancel using the functions
  <a href="push_get_first_local_notification.htm">
   <span>
    push_get_first_local_notification()
   </span>
  </a>
  and
  <a href="push_get_next_local_notification.htm">
   <span>
    push_get_next_local_notification()
   </span>
  </a>
  and the function will return
  <span>
   true
  </span>
  on success or
  <span>
   false
  </span>
  otherwise (for example if the notification does not exist or has already been triggered).
  <b>
   NOTE
  </b>
  : This function is limited to the
  <b>
   iOS
  </b>
  and
  <b>
   Android
  </b>
  target modules.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">push_cancel_local_notification(ID);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      ID
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Push_Notifications/push_get_first_local_notification.htm">
        Push Notification ID
       </a>
      </span>
     </td>
     <td>
      The ID of the notification to cancel.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Boolean
</a></code></pre>
  <h4>
   Example :
  </h4>
  <pre><code class="language-gml">var map = ds_map_create();
var ntf = push_get_first_local_notification(map);
while(ntf &amp;amp;gt;= 0)
{
    var data = ds_map_find_value(map, "data");
    if data == "Daily_Reward"
    {
        push_cancel_local_notification(ntf);
    }
    ntf = push_get_next_local_notification(map);
}
ds_map_destroy(map);
</code></pre>
  The above code creates a
  <span>
   DS Map
  </span>
  and then requests data for the first available notification in the queue. If a notification exists, the map is populated and the code then checks the "data" key for a specific string. If the string is found, the notification is canceled and moves on to check the next notification until all in the queue have been checked.
 </body>
</html>