<html>
 <head>
 </head>
 <body>
  <h1>
   cloud_file_save
  </h1>
  This function will commit a file to the chosen cloud service for storage. The function will return a unique
  <b>
   id
  </b>
  value that should then be used in the appropriate asynchronous event to identify the DS map that is returned as a "call back" from the cloud service. The file should contain
  <i>
   all
  </i>
  the information that you need to save for your game as you can only store one single "data blob" to the cloud, and running this function again will overwrite any previously stored values (as will using the
  <a href="cloud_string_save.htm">
   <span>
    cloud_string_save()
   </span>
  </a>
  function). The description should be a short string of information that describes the save, eg: "Level2, Stage2".
  
  
   For further information on the returned asynchronous data, please see the function
  <a href="cloud_synchronise.htm">
   <span>
    cloud_synchronise()
   </span>
  </a>
  .
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">cloud_file_save(file, description);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      string
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The file to be uploaded (as a string).
     </td>
    </tr>
    <tr>
     <td>
      description
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      A brief description of the data being stored.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm">
 Async Request ID
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var t_str = "";
for (var i = 0; i &amp;amp;lt; 10; i++;)
{
    t_str += string(global.Highscore[i]) + "|"
}
var file = file_text_open_write("Highscores.txt");
file_text_write_string(file, t_str);
file_text_close(file);
save_check = cloud_file_save("Highscores.txt", "Current Highscores");
</code></pre>
  The above code creates a string from the values stored in the global array "Highscores" and then writes this string to a file for local storage. The file is then sent to the cloud service for storage.
 </body>
</html>