<html>
 <head>
 </head>
 <body>
  <h1>
   vertex_freeze
  </h1>
  This function can be used to "freeze" a vertex buffer. This buffer becomes
  <b>
   read-only
  </b>
  , meaning that should you need to change it, you would have to delete the whole buffer and re-create it. A frozen buffer can be submitted to the shader faster than a normal, dynamic buffer and is recommended for those effects that require an unchanging custom primitive for the duration of a level or the game.
  
  
   The function will return 0 on successfully freezing the specified vertex buffer, however if it failed for any reason, it will return -1.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">vertex_freeze(buffer);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      buffer
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_create_buffer.htm">
        Vertex Buffer ID
       </a>
      </span>
     </td>
     <td>
      The vertex buffer to freeze.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a>
(0 for success, -1 for failure)
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">// Create event
vertex_freeze(vbuff);
</code></pre>
  The above code will freeze the given vertex buffer in the Create event, so it can be used as a "static" buffer in other events for faster access.
 </body>
</html>