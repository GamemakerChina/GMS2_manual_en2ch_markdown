<html>
 <head>
 </head>
 <body>
  <h1>
   draw_primitive_begin_texture
  </h1>
  This function must be called before you define the vertices of a textured primitive. You must give the kind of primitive to use (see
  <a href="draw_primitive_begin.htm">
   <span>
    draw_primitive_begin()
   </span>
  </a>
  for more information) and the
  <b>
   id
  </b>
  of a texture to use, which can be a sprite or background image asset. This asset
  <b>
   id
  </b>
  can be gotten from the functions
  <a href="../../Asset_Management/Sprites/Sprite_Information/sprite_get_texture.htm">
   <span>
    sprite_get_texture()
   </span>
  </a>
  , for example (use -1 for no texture).
  <b>
   <span>
    NOTE
   </span>
  </b>
  For a texture to repeat it must be a power of two in size, ie: 32x32, 128x128, etc...
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">draw_primitive_begin_texture(kind, tex)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      kind
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/draw_primitive_begin.htm">
        Primitive Type Constant
       </a>
      </span>
     </td>
     <td>
      The kind of primitive you are going to draw.
     </td>
    </tr>
    <tr>
     <td>
      tex
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Sprite_Information/sprite_get_texture.htm">
        Texture
       </a>
      </span>
     </td>
     <td>
      The texture to use with the primitive.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">draw_set_colour(c_white);
var tex = sprite_get_texture(spr_Background, 0);
draw_primitive_begin_texture(pr_trianglestrip, tex);
draw_vertex_texture(0, 0, 0, 0);
draw_vertex_texture(640, 0, 1, 0);
draw_vertex_texture(0, 480, 0, 1);
draw_vertex_texture(640, 480, 1, 1);
draw_primitive_end();
</code></pre>
  The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the "tex" variable, and the whole texture will be used to cover the completed primitive.
 </body>
</html>