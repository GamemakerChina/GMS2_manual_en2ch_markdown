<html>
 <head>
 </head>
 <body>
  <h1>
   draw_vertex
  </h1>
  This function defines the position of a vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw and the order with which you add the vertexes to it. See
  <span>
   <a href="draw_primitive_begin.htm">
    draw_primitive_begin()
   </a>
  </span>
  for
    more information. To end and draw the primitive you must call
  <a href="draw_primitive_end.htm">
   <span>
    draw_primitive_end()
   </span>
  </a>
  .
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">draw_vertex(x, y)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      x
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The x coordinate of the vertex.
     </td>
    </tr>
    <tr>
     <td>
      y
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The y coordinate of the vertex.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">draw_primitive_begin(pr_trianglelist); draw_vertex(100, 100); draw_vertex(100, 200); draw_vertex(150, 150); draw_primitive_end();
</code></pre>
  The above code will draw a simple triangle primitive.
 </body>
</html>