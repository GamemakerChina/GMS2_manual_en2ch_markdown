<html>
 <head>
 </head>
 <body>
  <h1>
   phy_rotation
  </h1>
  This variable can be used to get (or to set) the angle of the instances fixture in degrees, similar to setting or getting the
  <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/image_angle.htm">
   <span>
    image_angle
   </span>
  </a>
  . However note that in the physics world rotations are calculated in the
  <i>
   opposite
  </i>
  way to the normal
  <span>
   GameMaker
  </span>
  game world, meaning that vector functions like
  <a href="../../Maths_And_Numbers/Angles_And_Distance/point_direction.htm">
   <span>
    point_direction()
   </span>
  </a>
  should have their return values modified (simply making positive to negative should resolve this).
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">phy_rotation;
</code></pre>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a>
(single precision floating point value, or undefined if the instance is not physics enabled)
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">if (phy_speed_x &amp;amp;gt; 0) || (phy_speed_y &amp;amp;gt; 0)
{
    phy_rotation += sqrt(sqr(phy_speed_x) + sqr(phy_speed_y)) /10;
}
</code></pre>
  The above code checks the linear speed and if either vector is not 0, it then calculates the actual speed and uses that to set the rotation.
 </body>
</html>