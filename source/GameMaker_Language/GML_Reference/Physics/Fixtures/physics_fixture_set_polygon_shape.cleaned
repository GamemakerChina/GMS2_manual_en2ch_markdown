<html>
 <head>
 </head>
 <body>
  <h1>
   physics_fixture_set_polygon_shape
  </h1>
  This function sets a polygon shape for your fixture, but you will need to use
  <a href="physics_fixture_add_point.htm">
   <span>
    physics_fixture_add_point()
   </span>
  </a>
  to actually define the shape of this polygon relative to the origin of the fixture. The polygon
    is closed when the fixture is bound to an instance. You should note too that this function
  <i>
   must
  </i>
  be called before defining any points, and you must also have at least three points defined for your polygon before binding it to an instance or
    you will get an error.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">physics_fixture_set_polygon_shape(fixture)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      fixture
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/Physics/Fixtures/physics_fixture_create.htm">
        Physics Fixture ID
       </a>
      </span>
     </td>
     <td>
      the index of the fixture
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">physics_fixture_set_polygon_shape(fix_Ship); physics_fixture_add_point(fix_Ship, 0,0); physics_fixture_add_point(fix_Ship, -40, 100); physics_fixture_add_point(fix_Ship, 40, 100);
</code></pre>
  The code above will apply a polygon shape to the fixture indexed in the variable "fix_Ship" and then defines three points to create a triangular shape.
 </body>
</html>