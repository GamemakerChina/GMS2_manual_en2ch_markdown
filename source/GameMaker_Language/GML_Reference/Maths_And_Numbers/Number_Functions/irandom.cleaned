<html>
 <head>
 </head>
 <body>
  <h1>
   irandom
  </h1>
  This very useful function only returns integers (whole numbers). So, for example, to get a random number from 0 to 9 you can use
  <span>
   irandom(9)
  </span>
  and it will return a number from 0 to 9
  <i>
   inclusive
  </i>
  . Note that floats can also be used but the upper value after the point will be excluded, so
  <span>
   irandom(9.7)
  </span>
  will return a value from 0 to 9 only. The function has an upper bound of $7fffffffffffffffLL, so care should be taken if using very large numbers.
  <b>
   <span>
    NOTE
   </span>
  </b>
  This function will return the same value every time the game is run afresh due to the fact that
  <span>
   GameMaker
  </span>
  generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use
  <span>
   <a href="randomise.htm">
    <span>
     randomise()
    </span>
   </a>
  </span>
  at the start of your game.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">irandom(n);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      n
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The upper range from which the random number will be selected.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">if (irandom(9) == 1)
{
    score += 100;
}
</code></pre>
  This will produce a one in ten (since 0 is included) chance of adding 100 to the score.
 </body>
</html>