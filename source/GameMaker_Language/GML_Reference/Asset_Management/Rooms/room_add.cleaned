<html>
 <head>
 </head>
 <body>
  <h1>
   room_add
  </h1>
  This function will create a new, empty, room and add it to your game, returning its index to be stored in a variable for all further codes that deal with this room. Note that each room is permanently added to the game until the executable is closed, ie:
  <i>
   rooms added through code cannot be deleted again
  </i>
  . This has important implications for memory use and so you should use this function with care.
  <b>
   NOTE
  </b>
  : New rooms are not part of usual room ordering, so they do not have a "previous" or "next" room (meaning that the functions
  <span>
   <a href="room_next.htm">
    <span>
     room_next()
    </span>
   </a>
  </span>
  and
  <span>
   <a href="room_previous.htm">
    <span>
     room_previous()
    </span>
   </a>
  </span>
  will not work). To jump from the added room to another, you must use the index of the room itself.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">room_add();
</code></pre>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../The_Asset_Editors/Rooms.htm">
 Room Asset
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">global.myroom = room_add();
room_set_width(global.myroom, 640);
room_set_height(global.myroom, 480);
room_set_persistent(global.myroom, false);
</code></pre>
  This will create a new room and store its index in the variable "global.myroom". It will then set its width to 640 pixels, its height to 480 pixels, and its persistence to
  <span>
   false
  </span>
  .
 </body>
</html>