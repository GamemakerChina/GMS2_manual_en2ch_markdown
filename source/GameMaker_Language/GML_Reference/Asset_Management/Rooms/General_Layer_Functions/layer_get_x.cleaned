<html>
 <head>
 </head>
 <body>
  <h1>
   layer_get_x
  </h1>
  You can use this function to retrieve the x position of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using
  <a href="layer_create.htm">
   <span>
    layer_create()
   </span>
  </a>
  ) or the layer name (as a string - this will have a performance impact) and the function returns a real number for the x position of the layer, relative to the (0,0) position of the room. Default is 0.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">layer_get_x(layer_id)
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      layer_id
     </td>
     <td>
      <span>
       <a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
      or
      <span>
       <a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Rooms/General_Layer_Functions/layer_get_id.htm">
        Layer ID
       </a>
      </span>
     </td>
     <td>
      The unique ID value of the layer to get the x position of
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var lay_id = layer_get_id("Sprites");
if layer_get_x(lay_id) != 0 || layer_get_y(lay_id) != 0
{
    layer_x(lay_id, 0);
    layer_y(lay_id, 0);
}
</code></pre>
  The above code checks the given layer position and if it is not set to (0, 0) then it is set to that position.
 </body>
</html>