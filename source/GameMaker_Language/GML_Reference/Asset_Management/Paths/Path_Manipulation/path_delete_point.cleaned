<html>
 <head>
 </head>
 <body>
  <h1>
   path_delete_point
  </h1>
  With this function you can remove a point from the specified path. Path points are numbered from 0 so the first point is always the 0th point and the last path point will be
  <a href="../path_get_number.htm">
   <span>
    path_get_number()
   </span>
  </a>
  - 1. If you call this function on a path asset,
  <strong>
   then the removal of the point will be permanent
  </strong>
  and all instances assigned the path in the future will be missing the point that was removed. If this is not what you require, then you should use a function like
  <span>
   <a href="path_duplicate.htm">
    path_duplicate()
   </a>
  </span>
  to create a copy of the path first, then call this function on the duplicated asset (don't forget to call
  <span>
   <a href="path_delete.htm">
    path_delete()
   </a>
  </span>
  on the asset when it is no longer required).
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">path_delete_point(ind, n);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      index
     </td>
     <td>
      <span>
       <a href="../../../../../../The_Asset_Editors/Paths.htm">
        Path Asset
       </a>
      </span>
     </td>
     <td>
      The index of the path to delete a point from.
     </td>
    </tr>
    <tr>
     <td>
      n
     </td>
     <td>
      <span>
       <a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        Real
       </a>
      </span>
     </td>
     <td>
      The defining point to delete.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml">N/A
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var _col = true;
while (_col)
{
    var _num = path_get_number(mypath) - 1;
    if (_num &amp;amp;gt; 2)
    {
        var _x1 = path_get_point_x(my_path, _num);
        var _y1 = path_get_point_y(my_path, _num);
        var _x2 = path_get_point_x(my_path, _num -1);
        var _y2 = path_get_point_y(my_path, _num -1);
        if collision_line(_x1, _y1, _x2, _y2, obj_Wall, true, false)
        {
            path_delete_point(mypath, _num);
            _num -= 1;
        }
        else _col = false;
    }
    else _col = false;
}
</code></pre>
  The above code generates a loop that checks the points on a backwards from the end for a collision with the given object. If a collision is found, a path point is deleted, until there is no collision, or the path is only 2 points long.
 </body>
</html>