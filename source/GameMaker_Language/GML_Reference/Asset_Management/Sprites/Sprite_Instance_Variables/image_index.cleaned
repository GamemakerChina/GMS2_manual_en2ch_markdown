<html>
 <head>
 </head>
 <body>
  <h1>
   image_index
  </h1>
  A sprite is made up of one or more
  <i>
   sub-images
  </i>
  which can make the sprite appear animated as they switch from one to the other, or can they can be switched between in code to give different "states", much like a button has in windows. If the sprite is animated, then you can get the current frame of the animation by checking the
  <span>
   image_index
  </span>
  variable, or if you want to change the state of a static sprite, you can select a new sub-image by setting this variable to the desired sub-image of the sprite. Please note that for changes in this variable to be visible, the instance should have either
  <i>
   no
  </i>
  draw event (and so
  <span>
   GameMaker
  </span>
  will default draw the sprite) or be drawn using one of the drawing functions like
  <a href="../../../Drawing/Sprites_And_Tiles/draw_self.htm">
   <span>
    draw_self()
   </span>
  </a>
  or
  <a href="../../../Drawing/Sprites_And_Tiles/draw_sprite_ext.htm">
   <span>
    draw_sprite_ext()
   </span>
  </a>
  (by supplying the image_index into the appropriate argument).
  
  
   Note that setting this variable directly to a frame will
  <em>
   not
  </em>
  trigger any Broadcast Messages that may be present on that frame.
  
  
   Also note that while using skeletal animation sprites, you can still get and set the
  <span>
   image_index
  </span>
  values - see the function
  <a href="../Skeletal_Animation/Animation/skeleton_animation_get_duration.htm">
   <span>
    skeleton_animation_get_duration()
   </span>
  </a>
  for examples of how to do this.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">image_index;
</code></pre>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a>
(single precision floating point value)
</code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">if (image_speed &amp;amp;gt; 0)
{
    if (image_index &amp;amp;gt;= image_number - 1) instance_destroy();
}
</code></pre>
  The above code checks to see if the sprite is animating, and if it is then it checks to see if the current image_index is at the last frame and in that case destroys the instance.
 </body>
</html>