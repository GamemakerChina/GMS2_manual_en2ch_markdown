<html>
 <head>
 </head>
 <body>
  <h1>
   skeleton_animation_get_duration
  </h1>
  This function will return the time required for the given animation set to run before looping back to the beginning. The return value is in seconds.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">skeleton_animation_get_duration(animname);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      animname
     </td>
     <td>
      <span>
       <a href="../../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The name (a string) of the animation set to use.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a></code></pre>
  <h4>
   Example1:
  </h4>
  <pre><code class="language-gml">time += delta_time / 1000000; var duration = skeleton_animation_get_duration(skeleton_animation_get()); var frame = floor((image_number * (mTime / duration)) + 0.5) % image_number; image_index = frame; draw_self();
</code></pre>
  The above code will set the
  <span>
   image_index
  </span>
  to the correct value for the currently assigned skeletal animation sprite.
  <h4>
   Example2:
  </h4>
  <pre><code class="language-gml">time += delta_time / 1000000; var d = skeleton_animation_get_duration("walk"); if time &amp;amp;gt; d time -= d; draw_skeleton_time(sprite_index, "walk", "skin1", time, x, y, image_xscale, image_yscale, image_angle,
c_white);
</code></pre>
  The above code will draw the given skeletal animation sprite using delta-time to set the frame being drawn.
 </body>
</html>