<html>
 <head>
 </head>
 <body>
  <h1>
   id
  </h1>
  This
  <b>
   read-only
  </b>
  variable holds the unique identifying number for the instance. Every instance that you create - whether through code or by adding them to a room in the Room Editor - is given a number that is used internally to identify this instance and the variable
  <span>
   id
  </span>
  is what you can use to reference it. The
  <span>
   id
  </span>
  is also returned (and can be stored in a variable) when an instance is created using
  <span>
   <a href="../instance_create_layer.htm">
    instance_create_layer()
   </a>
  </span>
  or
  <span>
   <a href="../instance_create_depth.htm">
    instance_create_depth()
   </a>
  </span>
  , as well as other instance functions.
  <span>
   NOTE
  </span>
  The value of this variable is
  <i>
   not
  </i>
  the same as the identifier that the instance is given in the room editor and is also different to the
  <span>
   <a href="../instance_id.htm">
    <span>
     instance_id
    </span>
   </a>
  </span>
  array which contains all the ids of all the currently active instances.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">id;
</code></pre>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm">
 Instance ID
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">for(var i = 0; i &amp;amp;lt; instance_count; i++;)
{
    if instance_id[i] != id
    {
        instance_id[i].scr += 5;
    }
}
</code></pre>
  The above code adds 5 to the "scr" variable for every active instance in the room except the one running the code. It does this by looping through ALL the active instances (using the "instance_id" array to return each active instances ID) and comparing them against the built in "id" variable, which is the ID of the original instance running the code.
 </body>
</html>