<html>
 <head>
 </head>
 <body>
  <h1>
   object_is_ancestor
  </h1>
  This function can be used to check an object and see if it is an ancestor or not of another object. So, both arguments need to be object indices and
  <i>
   not
  </i>
  the instance ids, and the first one is always the object that you want to find out if it is a child of the second argument, which is always the object that want to check as the ancestor (parent).
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">object_is_ancestor(obj, par);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      obj
     </td>
     <td>
      <span>
       <a href="../../../../../The_Asset_Editors/Objects.htm">
        Object Asset
       </a>
      </span>
     </td>
     <td>
      The object that is being checked as the child.
     </td>
    </tr>
    <tr>
     <td>
      par
     </td>
     <td>
      <span>
       <a href="../../../../../The_Asset_Editors/Objects.htm">
        Object Asset
       </a>
      </span>
     </td>
     <td>
      The object that is being checked as the ancestor (parent).
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Boolean
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">if object_is_ancestor(object_index, obj_Enemy)
{
    instance_destroy();
}
</code></pre>
  The above code checks to see if the instance running the code is a child of the object "obj_Enemy", and if so it is destroyed.
 </body>
</html>