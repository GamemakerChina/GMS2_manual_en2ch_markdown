<html>
 <head>
 </head>
 <body>
  <h1>
   xboxlive_get_stats_for_user
  </h1>
  This function can be used to retrieve data about specific stats from the Xbox Live servers. You supply the user ID as returned by the function
  <a href="../Users_And_Accounts/xboxlive_get_user.htm">
   <span>
    xboxlive_get_user()
   </span>
  </a>
  , then your games Service Configuration ID (as shown on the XDP console), and finally the stats required. You can request up to a maximum of 14 stats, but this does not guarantee that you will get 14 stat results, as there is a limit to the total length of the request and therefore the maximum stat count depends on the length of the names of the stats themselves.
  
  
   The function will return 0 if the stat request was sent or -1 if there was an error, and the callback will trigger a
  <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">
   System Asynchronous Event
  </a>
  . This event will have the special DS map
  <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">
   <span>
    async_load
   </span>
  </a>
  which should then be parsed for the following key:
  <ul>
   <li>
    "
    <b>
     event_type
    </b>
    " - should hold the string "
    <b>
     stat_result
    </b>
    " if the event was triggered by this function
   </li>
  </ul>
  If the event type relates to this function, then there will also be the following additional key:
  <ul>
   <li>
    "
    <b>
     user
    </b>
    " - holds the user ID for the requested stats.
   </li>
  </ul>
  There may also be an extra set of key value pairs, where the key is the stat name requested, and the value the value for that stat on the server. Note that if a stat has never been created for this user (because they haven't fired the events that set it), no value may be returned for that stat (
  <a href="../../Data_Structures/DS_Maps/ds_map_exists.htm">
   <span>
    ds_map_exists()
   </span>
  </a>
  can be used to check for the stats in the
  <span>
   async_load
  </span>
  map).
  
  
   If the request fails due to the request length being to large, there should be a message in the console output stating the error code:
  <pre><code class="language-gml">xboxlive_get_stats_for_user - exception occurred getting results - 0x80190190
</code></pre>
  When this happens, the async event DS map should have a "succeeded" key with a value of "0", and in this case you should attempt to retrieve fewer stats in a single call.
  <h4>
   Syntax:
  </h4>
  <pre><code class="language-gml">xboxlive_get_stats_for_user(user_id, serviceconfig_id, statname1, â€¦);
</code></pre>
  <table>
   <tbody>
    <tr>
     <th>
      Argument
     </th>
     <th>
      Type
     </th>
     <th>
      Description
     </th>
    </tr>
    <tr>
     <td>
      user_id
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Reference/UWP_And_XBox_Live/Users_And_Accounts/xboxlive_get_user.htm">
        Xbox User ID
       </a>
      </span>
     </td>
     <td>
      The user ID pointer.
     </td>
    </tr>
    <tr>
     <td>
      serviceconfig_id
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
     </td>
     <td>
      The service config file ID
     </td>
    </tr>
    <tr>
     <td>
      statname1 (2, 3, etc...)
     </td>
     <td>
      <span>
       <a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
        String
       </a>
      </span>
      s
     </td>
     <td>
      The stat names to retrieve the information for.
     </td>
    </tr>
   </tbody>
  </table>
  <h4>
   Returns:
  </h4>
  <pre><code class="language-gml"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm">
 Real
</a></code></pre>
  <h4>
   Example:
  </h4>
  <pre><code class="language-gml">var _uid = xboxlive_get_user(0);
var _configid = "00000000-0000-0000-0000-000000000000";
xboxlive_get_stats_for_user(xbuser, _configid, "GameProgress", "CurrentMode");
</code></pre>
  The above code gets the user ID and then uses that to request information about specific stats for that user.
 </body>
</html>