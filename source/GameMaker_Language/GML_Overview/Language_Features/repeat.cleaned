<html>
 <head>
 </head>
 <body>
  <h1>
   repeat
  </h1>
  The GameMaker Language has a number of ways that you can perform
  <i>
   loops
  </i>
  , ie: have a statement or statements iterate over itself a certain number of times. The simplest of these is the
  <span>
   repeat
  </span>
  statement, which has the form:
  <pre><code class="language-gml">repeat (&amp;amp;lt;expression&amp;amp;gt;)
{
    &amp;amp;lt;statement&amp;amp;gt;;
    &amp;amp;lt;statement&amp;amp;gt;;
    ...
}
</code></pre>
  With
  <span>
   repeat
  </span>
  the given
  <a>
   statement
  </a>
  is repeated the number of times indicated by the rounded value of the
  <a>
   expression
  </a>
  . For example, the following creates five balls at random positions:
  <pre><code class="language-gml">repeat (5)
{
    instance_create_layer(random(400), random(400), "Instances", obj_ball);
}
</code></pre>
  This can be very useful to avoid typing out the same code multiple times, or for using arrays, or for counting through a number of operations etc... You are not limited to using a single statement either, and can repeat multiple statements by enclosing them within curly brackets
  <span>
   {}
  </span>
  . For example:
  <pre><code class="language-gml">var _x = 32;
repeat (global.p_lives)
{
    draw_sprite(spr_heart, 0, _x, 32);
    _x += sprite_get_width(spr_heart);
}
</code></pre>
  The above example repeats the statements in the curly brackets for however many
  <a>
   iteration
  </a>
  <span>
   s
  </span>
  the "lives" global variable has, and each iteration draws the heart sprite at the
  <span>
   _x
  </span>
  position, then moves the position along a bit based on the heart sprite width.
  <strong>
   When should you use a
   <span>
    repeat
   </span>
   loop?
  </strong>
  Anytime that you want to repeat over one or more statements a fixed number of times without any specific need to maintain a count of the iterations.
  
  
   It is worth noting that you can use the special
  <span>
   <a href="break.htm">
    break
   </a>
  </span>
  and
  <span>
   <a href="continue.htm">
    continue
   </a>
  </span>
  statements within a
  <font>
   <span>
    <b>
     repeat
    </b>
   </span>
  </font>
  loop too. Using
  <span>
   break
  </span>
  will immediately exit the loop and move on to any code that is in the event or function after the loop should have finished, eg:
  <pre><code class="language-gml">var i = 0;
var temp = 0;
repeat (10)
{
    temp += array[i];
    if (temp &amp;amp;gt; max_total)
    {
        break;
    }
    else
    {
        i += 1;
    }
}
</code></pre>
  The above code loops through 10
  <a href="../Arrays.htm">
   array
  </a>
  values and adds them to a local variable. If the total of the local variable is greater than the given value for
  <span>
   max_total
  </span>
  , then the loop is terminated using break, otherwise the loop will continue.
  
  
   An example of using
  <span>
   continue
  </span>
  in a
  <span>
   repeat
  </span>
  loop would be:
  <pre><code class="language-gml">repeat(10)
{   
    var _x = random(room_width);
    var _y = random(room_height);
    if (instance_position(_x, y, obj_Enemy)
    {
        continue;
    }
    instance_create_layer(_x, _y, "Instances", obj_Enemy);
}
</code></pre>
  This code will repeat 10 times, generating a random room position then checking if an instance of the object
  <span>
   obj_Enemy
  </span>
  exists at that position. If it does, the current loop iteration is terminated using
  <span>
   continue
  </span>
  and a new iteration is started, and if it doesn't then an instance of the object
  <span>
   obj_Enemy
  </span>
  is created at the random position.
  
  
   For more examples of loop functions please see the sections on
  <a href="while.htm">
   <span>
    while
   </span>
  </a>
  ,
  <a href="do___until.htm">
   <span>
    do... until
   </span>
  </a>
  , and
  <a href="for.htm">
   <span>
    for
   </span>
  </a>
  .
 </body>
</html>