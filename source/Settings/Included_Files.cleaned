<html>
 <head>
 </head>
 <body>
  <h1>
   Included Files
  </h1>
  <span>
   GameMaker
  </span>
  is not just limited to the assets that you add in the Asset Browser, as you can also add files to the project as
  <strong>
   Included Files
  </strong>
  so that they can then be accessed while the game is running. These are simply files that are
  <em>
   included
  </em>
  with your game package, so you can do with them what you wish.
  
  
   What kinds of files you add will depend on what you want to do, but things like default
  <span>
   *.ini
  </span>
  files, sprites and background images, or spreadsheets are commonly used as Included Files.
  <h2>
   Adding Included Files
  </h2>
  The simplest way to add an Included File is to drag it from your Explorer/Finder into the IDE. You will be asked to confirm whether the dragged file should be added to
  <strong>
   Included Files
  </strong>
  . After pressing
  <strong>
   Yes
  </strong>
  , the
  <strong>
   Included Files
  </strong>
  window will open, containing the file you just added.
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Settings/Included_Files_Popup.png"/><br/>
  <h2>
   Included Files Window
  </h2>
  Open the Asset Browser's
  <b>
   Extras
  </b>
  menu
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Icons/Icon_AssetMenu.png"/><br/>
  (Fig. 1), to manually open the
  <strong>
   Included Files
  </strong>
  window (Fig. 2):
  <figure>
   <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Settings/Included_Files_Editor_Open.png"/><br/>
   <figcaption>
    Fig. 1
   </figcaption>
  </figure>
  <figure>
   <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Settings/Included_Files.png"/><br/>
   <figcaption>
    Fig. 2
   </figcaption>
  </figure>
  This window only shows you the Included Files that are present in your project. To re-arrange or rename your files, you will need to edit the actual directory where these files are stored.
  
  
   Clicking on
  <strong>
   Open In Explorer/Finder
  </strong>
  will open the
  <span>
   datafiles
  </span>
  folder in your project directory, which contains all the Included Files. You can add and remove files in this directory as you wish, and the interface in GameMaker will automatically update to reflect the structure in your
  <span>
   datafiles
  </span>
  folder.
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Settings/Included_Files_Example.png"/><br/>
  Once you have added files to the editor, you can double-click
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Icons/Icon_LMB.png"/><br/>
  on them to open up the
  <strong>
   File Properties
  </strong>
  :
  <br/><img src="https://gms.magecorn.com/Manual/assets/Images/Settings/Included_Files_Properties.png"/><br/>
  This window shows the name of the file, its size on disk, and also the platforms that it should be exported to when you compile/test your game. You have buttons to select "All" or "None", or you can go down the list and check/uncheck the targets that you want the file to be exported to.
  
  
   For further information on how Included Files are stored with your game and how they are accessed, please see
  <a href="../Additional_Information/The_File_System.htm">
   File System
  </a>
  .
  <span>
   IMPORTANT
  </span>
  When including sound files, you should ensure that the files avoid names that clash with streaming sound assets. For example, a sound asset called "
  <strong>
   main_music
  </strong>
  " will cause an Included File called "
  <strong>
   main_music.ogg
  </strong>
  " to become undefined when the project runs. This is because streamed files are also stored outside of the main project bundle, so care must be taken in these situations.
  
  
   You can also include
  <span>
   DLL
  </span>
  (on Windows) or
  <span>
   DyLib
  </span>
  (on macOS) files as Included Files and then create your own custom functions to deal with them using
  <a href="../GameMaker_Language/GML_Reference/OS_And_Compiler/external_define.htm">
   <span>
    external_define()
   </span>
  </a>
  . These can then be used calling the
  <a href="../GameMaker_Language/GML_Reference/OS_And_Compiler/external_call.htm">
   <span>
    external_call()
   </span>
  </a>
  function.
  <span>
   NOTE
  </span>
  Using Included Files to create extra functionality in this way is incompatible with the
  <a href="../The_Asset_Editors/Extensions.htm">
   Extension
  </a>
  system, as you cannot use use the
  <span>
   <span>
    external_*()
   </span>
  </span>
  functions with files added in an extension. Extensions assets already have a method of adding constants and functions.
 </body>
</html>